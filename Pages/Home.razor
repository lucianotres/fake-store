@page "/"
@using FakeProduct.Models
@using FakeProduct.Services
@inject FakeStoreService fakeStoreService

<PageTitle>Início</PageTitle>

<h1>Loja Fake</h1>
<p>Bem vindos a nossa loja fake!</p>

<button @onclick="ListarProdutos">Atualizar Lista</button>
<button @onclick="AdicionarProduto">Novo Produto</button>

@if (verProduto)
{
    <ProdutoView product="selecionadoProduto"
                 OnCancelar="() => { verProduto = false; StateHasChanged(); }"
                 OnSalvar="ok => { verProduto = false; StateHasChanged(); }" />
}

@foreach (var p in Products)
{
    <ProdutoListView product="p" />
    <button @onclick="() => { selecionadoProduto = p; verProduto = true; }">Editar</button>
    <button @onclick="() => ExcluirProduto(p)">Excluir</button>
}


@code {
    private List<Product> Products = new();
    private bool verProduto = false;
    private Product? selecionadoProduto = null;

    private async void ListarProdutos()
    {
        Products = await fakeStoreService.GetProductsAsync();

        StateHasChanged();
    }

    private void AdicionarProduto(MouseEventArgs args)
    {
        selecionadoProduto = null;
        verProduto = !verProduto;
    }

    private async void ExcluirProduto(Product product)
    {       
        var ok = await fakeStoreService.DeleteProductAsync(product.Id);

        if (ok)
        {
            Products.Remove(product);
            StateHasChanged();
        }
    }
}