@page "/carrinhos"
@attribute [Authorize]
@using FakeProduct.Models
@using FakeProduct.Services
@using Microsoft.AspNetCore.Authorization
@inject FakeStoreCartsService fakeStoreService
@inject LocalStorageDataService localStorageService;

<PageTitle>Carrinhos de Compras</PageTitle>

<h1>Carrinhos de Compras</h1>
<p>Lista de carrinhos cadastrados no sistema</p>

<table class="table">
    <thead>
        <tr>
            <th>Nº</th>
            <th>Produtos</th>
            <th>Quantidades</th>
            <th>Valor Total</th>
            <th></th>
        </tr>
    </thead>
    @if (carregando)
    {
        <tr>
            <td colspan="5">Carregando produtos...</td>
        </tr>
    }
    else
        @foreach (var c in Carrinhos)
        {
            <CartListView cart="c" OnRemover="() => { Carrinhos.Remove(c); StateHasChanged(); }" />
        }
</table>

@code {
    private List<Cart> Carrinhos = new();
    private bool carregando = false;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
            ListarCarrinhos();
    }

    private async void ListarCarrinhos()
    {
        try
        {
            carregando = true;
            StateHasChanged();

            await localStorageService.AtualizarListaProdutos();

            Carrinhos = await fakeStoreService.GetCartsAsync();
        }
        finally
        {
            carregando = false;
            StateHasChanged();
        }
    }

}
