@using FakeProduct.Models

<div class="card">
    <img class="card-img-top" src="@product.Image" alt="@product.Title" />
    <div class="card-body">
        <h5 class="card-title">
            @product.Title
            <span class="badge bg-secondary">@product.Category</span>
        </h5>
        <p class="card-text">@product.Description</p>    
        <div class="card-footer">
            <div>
                Preço: <strong>$ @product.Price.ToString("#,##0.00")</strong>
                @if (cotacao.Cotacao != null)
                {
                    <text>&nbsp; em cotação: <strong>@cotacao.Cotacao.ConvertFromUSD(product.Price)?.ToString("#,##0.00")</strong></text>
                }
            </div>
            @if (OnSelecionar != null)
            {
                <button class="btn btn-sm btn-primary" @onclick="() => OnSelecionar?.Invoke()">Selecionar</button>
            }
            else
            {
                <button class="btn btn-sm btn-primary" @onclick="() => OnEditar?.Invoke()">Editar</button>
                <button class="btn btn-sm btn-danger" @onclick="() => OnExcluir?.Invoke()">Excluir</button>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Product product { get; set; } = new();

    [Parameter]
    public Action? OnEditar { get; set; }

    [Parameter]
    public Action? OnExcluir { get; set; }

    [Parameter]
    public Action? OnSelecionar { get; set; }

    [CascadingParameter]
    public required MinhasCotacoes cotacao { get; set; }
}
